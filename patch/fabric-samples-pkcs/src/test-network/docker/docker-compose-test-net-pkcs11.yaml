# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

volumes:
  orderer.example.com:
  peer0.org1.example.com:
  peer0.org2.example.com:

networks:
  test:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/24
          gateway: 172.21.0.1

services:

  orderer.example.com:
    user: ${CNTR_USER_ID}:${CNTR_USER_GRP}
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - FABRIC_LOGGING_SPEC=DEBUG
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]

      #pkcs11
      # fabric 2.x 에서 BCCSP 항목은 환경변수 세팅으로 전달이 되지않는다.(fabric 1.4.x는 작동)
      # - ORDERER_GENERAL_BCCSP_DEFAULT=PKCS11
      # - ORDERER_GENERAL_BCCSP_PKCS11_LIBRARY=/usr/local/lib/softhsm/libsofthsm2.so
      # - ORDERER_GENERAL_BCCSP_PKCS11_PIN=98765432
      # - ORDERER_GENERAL_BCCSP_PKCS11_LABEL=ForFabric
      # - ORDERER_GENERAL_BCCSP_PKCS11_HASH=SHA2
      # - ORDERER_GENERAL_BCCSP_PKCS11_SECURITY=256
      - SOFTHSM2_CONF=/tmp/softhsm2.conf

    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    #command: sh -c 'sleep 99999'
    volumes:
        - ../system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
        - ../organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp
        - ../organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/:/var/hyperledger/orderer/tls
        #- orderer.example.com:/var/hyperledger/production/orderer

        #pkcs11
        - ../_pkcs_data/softhsm/tokens:/tmp/tokens
        # orderer.yaml
        - ../_pkcs_data/docker/orderer.example.com/vol/fabric:/etc/hyperledger/fabric
        - ../_pkcs_data/docker/orderer.example.com/vol/production:/var/hyperledger/production
        #fabric-2.2.0 : alpine 3.12.7
        - ../_pkcs_in/docker/alpine/3.12.7/softhsm:/usr/local/lib/softhsm
        - ../_pkcs_in/docker/alpine/3.12.7/softhsm2.conf:/tmp/softhsm2.conf
        - ../_pkcs_in/docker/alpine/3.12.7/usr/lib/libgcc_s.so.1:/usr/lib/libgcc_s.so.1
        - ../_pkcs_in/docker/alpine/3.12.7/usr/lib/libstdc++.so.6:/usr/lib/libstdc++.so.6
        - ../_pkcs_in/docker/alpine/3.12.7/usr/lib/libstdc++.so.6.0.28:/usr/lib/libstdc++.so.6.0.28        
        
    ports:
      - 7050:7050
    networks:
      - test

  peer0.org1.example.com:
    user: ${CNTR_USER_ID}:${CNTR_USER_GRP}    
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_test
      - FABRIC_LOGGING_SPEC=DEBUG
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org1.example.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP

      #pkcs11
      # fabric 2.x 에서 BCCSP 항목은 환경변수 세팅으로 전달이 되지않는다.(fabric 1.4.x는 작동)
      # - CORE_PEER_BCCSP_DEFAULT=PKCS11
      # - CORE_PEER_BCCSP_PKCS11_LIBRARY=/usr/local/lib/softhsm/libsofthsm2.so
      # - CORE_PEER_BCCSP_PKCS11_PIN=98765432
      # - CORE_PEER_BCCSP_PKCS11_LABEL=ForFabric
      # - CORE_PEER_BCCSP_PKCS11_HASH=SHA2
      # - CORE_PEER_BCCSP_PKCS11_SECURITY=256
      - SOFTHSM2_CONF=/tmp/softhsm2.conf

    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - ../organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - ../organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/fabric/tls
        #- peer0.org1.example.com:/var/hyperledger/production

        #pkcs11
        - ../_pkcs_data/softhsm/tokens:/tmp/tokens
        # core.yaml
        - ../_pkcs_data/docker/peer0.org1.example.com/vol/fabric:/etc/hyperledger/fabric
        - ../_pkcs_data/docker/peer0.org1.example.com/vol/production:/var/hyperledger/production
        #fabric-2.2.0 : alpine 3.12.7
        - ../_pkcs_in/docker/alpine/3.12.7/softhsm:/usr/local/lib/softhsm
        - ../_pkcs_in/docker/alpine/3.12.7/softhsm2.conf:/tmp/softhsm2.conf
        - ../_pkcs_in/docker/alpine/3.12.7/usr/lib/libgcc_s.so.1:/usr/lib/libgcc_s.so.1
        - ../_pkcs_in/docker/alpine/3.12.7/usr/lib/libstdc++.so.6:/usr/lib/libstdc++.so.6
        - ../_pkcs_in/docker/alpine/3.12.7/usr/lib/libstdc++.so.6.0.28:/usr/lib/libstdc++.so.6.0.28        

    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    #command: sh -c 'sleep 99999'
    ports:
      - 7051:7051
    networks:
      - test

  peer0.org2.example.com:
    user: ${CNTR_USER_ID}:${CNTR_USER_GRP}
    container_name: peer0.org2.example.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_test
      - FABRIC_LOGGING_SPEC=DEBUG
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_ADDRESS=peer0.org2.example.com:9051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org2.example.com:9052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:9051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:9051
      - CORE_PEER_LOCALMSPID=Org2MSP

      #pkcs11
      # fabric 2.x 에서 BCCSP 항목은 환경변수 세팅으로 전달이 되지않는다.(fabric 1.4.x는 작동)
      # - CORE_PEER_BCCSP_DEFAULT=PKCS11
      # - CORE_PEER_BCCSP_PKCS11_LIBRARY=/usr/local/lib/softhsm/libsofthsm2.so
      # - CORE_PEER_BCCSP_PKCS11_PIN=98765432
      # - CORE_PEER_BCCSP_PKCS11_LABEL=ForFabric
      # - CORE_PEER_BCCSP_PKCS11_HASH=SHA2
      # - CORE_PEER_BCCSP_PKCS11_SECURITY=256
      - SOFTHSM2_CONF=/tmp/softhsm2.conf

    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - ../organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/fabric/msp
        - ../organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls:/etc/hyperledger/fabric/tls
        #- peer0.org2.example.com:/var/hyperledger/production

        #pkcs11
        - ../_pkcs_data/softhsm/tokens:/tmp/tokens
        # core.yaml
        - ../_pkcs_data/docker/peer0.org2.example.com/vol/fabric:/etc/hyperledger/fabric
        - ../_pkcs_data/docker/peer0.org2.example.com/vol/production:/var/hyperledger/production
        #fabric-2.2.0 : alpine 3.12.7
        - ../_pkcs_in/docker/alpine/3.12.7/softhsm:/usr/local/lib/softhsm
        - ../_pkcs_in/docker/alpine/3.12.7/softhsm2.conf:/tmp/softhsm2.conf
        - ../_pkcs_in/docker/alpine/3.12.7/usr/lib/libgcc_s.so.1:/usr/lib/libgcc_s.so.1
        - ../_pkcs_in/docker/alpine/3.12.7/usr/lib/libstdc++.so.6:/usr/lib/libstdc++.so.6
        - ../_pkcs_in/docker/alpine/3.12.7/usr/lib/libstdc++.so.6.0.28:/usr/lib/libstdc++.so.6.0.28        

    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    #command: sh -c 'sleep 99999'
    ports:
      - 9051:9051
    networks:
      - test
  
  cli:
    user: ${CNTR_USER_ID}:${CNTR_DK_GRP_ID}
    container_name: cli
    image: hyperledger/fabric-tools:$IMAGE_TAG
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      #- FABRIC_LOGGING_SPEC=INFO
      - FABRIC_LOGGING_SPEC=DEBUG

      #pkcs11
      # fabric 2.x 에서 BCCSP 항목은 환경변수 세팅으로 전달이 되지않는다.(fabric 1.4.x는 작동)
      # - CORE_PEER_BCCSP_DEFAULT=PKCS11
      # - CORE_PEER_BCCSP_PKCS11_LIBRARY=/usr/local/lib/softhsm/libsofthsm2.so
      # - CORE_PEER_BCCSP_PKCS11_PIN=98765432
      # - CORE_PEER_BCCSP_PKCS11_LABEL=ForFabric
      # - CORE_PEER_BCCSP_PKCS11_HASH=SHA2
      # - CORE_PEER_BCCSP_PKCS11_SECURITY=256
      - SOFTHSM2_CONF=/tmp/softhsm2.conf

    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ../organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations
        - ../scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/

        # tmp
        - ../peer-alpine:/usr/local/bin/peer

        #pkcs11
        - ../_pkcs_data/softhsm/tokens:/tmp/tokens

        # core.yaml
        - ../_pkcs_data/docker/cli/vol/fabric/core.yaml:/etc/hyperledger/fabric/core.yaml

        # fabric cli contaner: alpine 3.12.0, (fabric-2.2.0 : alpine 3.12.7)
        - ../_pkcs_in/docker/alpine/3.12.7/softhsm:/usr/local/lib/softhsm
        - ../_pkcs_in/docker/alpine/3.12.7/softhsm2.conf:/tmp/softhsm2.conf
        - ../_pkcs_in/docker/alpine/3.12.7/usr/lib/libgcc_s.so.1:/usr/lib/libgcc_s.so.1
        - ../_pkcs_in/docker/alpine/3.12.7/usr/lib/libstdc++.so.6:/usr/lib/libstdc++.so.6
        - ../_pkcs_in/docker/alpine/3.12.7/usr/lib/libstdc++.so.6.0.28:/usr/lib/libstdc++.so.6.0.28        

    depends_on:
      - peer0.org1.example.com
      - peer0.org2.example.com
    networks:
      - test
