#!/bin/bash

function createOrg1() {

  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org1.example.com/

  FCAS_PROTO=https
  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org1.example.com/

  #pkcs11 
  cp  "organizations/fabric-ca-client-pkcs11/fabric-ca-client-config.yaml"  "${FABRIC_CA_CLIENT_HOME}/"
  if [ $? -ne 0 ]; then
   echo "[ERR] failed to copy fabric-ca-client-config.yaml to ${FABRIC_CA_CLIENT_HOME}/"
   exit 1
  fi

  #tls-cert.pem is automatically generated by farbic-ca-server
  export SOFTHSM2_CONF="${_PKCS_SHSM_CONF_FILE_PATH}"

  export FABRIC_CA_CLIENT_BCCSP_DEFAULT=PKCS11
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_LIBRARY=${_PKCS_LIB_PATH}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_PIN=${_PKCS_PIN}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_LABEL=${_PKCS_TOKEN}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_HASH=${_PKCS_HASH}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_SECURITY=${_PKCS_SECURITY}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_IMMUTABLE=${_PKCS_IMMUTABLE}  

  #export FABRIC_CA_CLIENT_DEBUG=true

  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://admin:adminpw@localhost:7054 --caname ca-org1 --tls.certfiles ${PWD}/organizations/fabric-ca/org1/tls-cert.pem
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-org1.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-org1.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-org1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-org1.pem
    OrganizationalUnitIdentifier: orderer' >${PWD}/organizations/peerOrganizations/org1.example.com/msp/config.yaml

  #pkcs11
  export FABRIC_CA_CLIENT_URL=${FCAS_PROTO}://localhost:7054
  export FABRIC_CA_CLIENT_CSR_HOSTS=localhost
  infoln ""
  infoln "====================================================="
  infoln "[INFO] org1 fabric-ca-server url: ${FABRIC_CA_CLIENT_URL} "
  infoln "====================================================="
  infoln ""

  set -e

  infoln "Registering peer0"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client register --caname ca-org1 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/org1/tls-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client register --caname ca-org1 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles ${PWD}/organizations/fabric-ca/org1/tls-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client register --caname ca-org1 --id.name org1admin --id.secret org1adminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/org1/tls-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://peer0:peer0pw@localhost:7054 --caname ca-org1 -M ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp --csr.hosts peer0.org1.example.com --tls.certfiles ${PWD}/organizations/fabric-ca/org1/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/org1.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/config.yaml
  
  set +e

  infoln "Generating the peer0-tls certificates"

  #set -x
  #${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://peer0:peer0pw@localhost:7054 --caname ca-org1 -M ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls --enrollment.profile tls --csr.hosts peer0.org1.example.com --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/org1/tls-cert.pem
  
  make_fabric_tls_dirs "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls"
  chk_rst_exit $? "failed to make tls directoires, ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls"
 
  ${PWD}/_pkcs_cert_tool/gen_pkcs_key_cert.sh \
    "${PWD}/_pkcs_data/crypto/org1.example.com/pkcs_cert" \
    tls_server \
    "peer0.org1.example.com localhost" \
    tls-peer0.org1.example.com \
    "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key" \
    "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt" \
    "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" \

  chk_rst_exit $? "failed to generate peer0.org1.example.com tls server cert.."

  set -e
  cp "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt" \
     "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/signcerts/cert.pem"

  cp "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" \
     "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/tlscacerts/tls-localhost-7054-ca-org1.pem"


  # { set +x; } 2>/dev/null
  
  #cp ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
  #cp ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/signcerts/* ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
  #cp ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/keystore/* ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key

  # copy tlscacert/* -> msp/tlscacerts
  mkdir -p ${PWD}/organizations/peerOrganizations/org1.example.com/msp/tlscacerts
  cp ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/org1.example.com/msp/tlscacerts/ca.crt

  mkdir -p ${PWD}/organizations/peerOrganizations/org1.example.com/tlsca
  cp ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem

  mkdir -p ${PWD}/organizations/peerOrganizations/org1.example.com/ca
  cp ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/cacerts/* ${PWD}/organizations/peerOrganizations/org1.example.com/ca/ca.org1.example.com-cert.pem

  infoln "Generating the user msp"  
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://user1:user1pw@localhost:7054 --caname ca-org1 -M ${PWD}/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/org1/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/org1.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/config.yaml

  infoln "Generating the org admin msp"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://org1admin:org1adminpw@localhost:7054 --caname ca-org1 -M ${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/org1/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/org1.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/config.yaml
  set +e

  #tree "${PWD}/organizations/peerOrganizations/org1.example.com"
}

function createOrg2() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org2.example.com/

  FCAS_PROTO=https
  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org2.example.com/

  #pkcs11 
  cp  "organizations/fabric-ca-client-pkcs11/fabric-ca-client-config.yaml"  "${FABRIC_CA_CLIENT_HOME}/"
  if [ $? -ne 0 ]; then
   echo "[ERR] failed to copy fabric-ca-client-config.yaml to ${FABRIC_CA_CLIENT_HOME}/"
   exit 1
  fi

  #tls-cert.pem is automatically generated by farbic-ca-server
  export SOFTHSM2_CONF="${_PKCS_SHSM_CONF_FILE_PATH}"

  export FABRIC_CA_CLIENT_BCCSP_DEFAULT=PKCS11
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_LIBRARY=${_PKCS_LIB_PATH}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_PIN=${_PKCS_PIN}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_LABEL=${_PKCS_TOKEN}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_HASH=${_PKCS_HASH}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_SECURITY=${_PKCS_SECURITY}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_IMMUTABLE=${_PKCS_IMMUTABLE}

  set -x
  set -e
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://admin:adminpw@localhost:8054 --caname ca-org2 --tls.certfiles ${PWD}/organizations/fabric-ca/org2/tls-cert.pem
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-org2.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-org2.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-org2.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-org2.pem
    OrganizationalUnitIdentifier: orderer' >${PWD}/organizations/peerOrganizations/org2.example.com/msp/config.yaml

  #pkcs11
  export FABRIC_CA_CLIENT_URL=${FCAS_PROTO}://localhost:8054
  export FABRIC_CA_CLIENT_CSR_HOSTS=localhost
  infoln ""
  infoln "====================================================="
  infoln "[INFO] org2 fabric-ca-server url: ${FABRIC_CA_CLIENT_URL} "
  infoln "====================================================="
  infoln ""

  infoln "Registering peer0"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client register --caname ca-org2 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/org2/tls-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client register --caname ca-org2 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles ${PWD}/organizations/fabric-ca/org2/tls-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client register --caname ca-org2 --id.name org2admin --id.secret org2adminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/org2/tls-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://peer0:peer0pw@localhost:8054 --caname ca-org2 -M ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp --csr.hosts peer0.org2.example.com --tls.certfiles ${PWD}/organizations/fabric-ca/org2/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/org2.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/config.yaml
  set +e

  infoln "Generating the peer0-tls certificates"

  #set -x
  #${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://peer0:peer0pw@localhost:8054 --caname ca-org2 -M ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls --enrollment.profile tls --csr.hosts peer0.org2.example.com --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/org2/tls-cert.pem

  make_fabric_tls_dirs "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls"
  chk_rst_exit $? "failed to make tls directoires, ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls"
 
  ${PWD}/_pkcs_cert_tool/gen_pkcs_key_cert.sh \
    "${PWD}/_pkcs_data/crypto/org2.example.com/pkcs_cert" \
    tls_server \
    "peer0.org2.example.com localhost" \
    tls-peer0.org2.example.com \
    "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.key" \
    "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt" \
    "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt" \

  chk_rst_exit $? "failed to generate peer0.org2.example.com tls server cert.."

  set -e
  cp "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt" \
     "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/signcerts/cert.pem"

  cp "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt" \
     "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/tlscacerts/tls-localhost-8054-ca-org2.pem"

  # { set +x; } 2>/dev/null

  #cp ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt
  #cp ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/signcerts/* ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt
  #cp ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/keystore/* ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.key

  # copy tlscacert/* -> msp/tlscacerts
  mkdir -p ${PWD}/organizations/peerOrganizations/org2.example.com/msp/tlscacerts
  cp ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/org2.example.com/msp/tlscacerts/ca.crt

  mkdir -p ${PWD}/organizations/peerOrganizations/org2.example.com/tlsca
  cp ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/org2.example.com/tlsca/tlsca.org2.example.com-cert.pem

  mkdir -p ${PWD}/organizations/peerOrganizations/org2.example.com/ca
  cp ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/cacerts/* ${PWD}/organizations/peerOrganizations/org2.example.com/ca/ca.org2.example.com-cert.pem

  infoln "Generating the user msp"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://user1:user1pw@localhost:8054 --caname ca-org2 -M ${PWD}/organizations/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/org2/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/org2.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp/config.yaml

  infoln "Generating the org admin msp"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://org2admin:org2adminpw@localhost:8054 --caname ca-org2 -M ${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/org2/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/org2.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/config.yaml
  set +e

  #tree "${PWD}/organizations/peerOrganizations/org2.example.com"
}

function createOrderer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/example.com

  FCAS_PROTO=https
  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/example.com

  #pkcs11 
  cp  "organizations/fabric-ca-client-pkcs11/fabric-ca-client-config.yaml"  "${FABRIC_CA_CLIENT_HOME}/"
  if [ $? -ne 0 ]; then
   echo "[ERR] failed to copy fabric-ca-client-config.yaml to ${FABRIC_CA_CLIENT_HOME}/"
   exit 1
  fi

  #tls-cert.pem is automatically generated by farbic-ca-server
  export SOFTHSM2_CONF="${_PKCS_SHSM_CONF_FILE_PATH}"

  export FABRIC_CA_CLIENT_BCCSP_DEFAULT=PKCS11
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_LIBRARY=${_PKCS_LIB_PATH}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_PIN=${_PKCS_PIN}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_LABEL=${_PKCS_TOKEN}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_HASH=${_PKCS_HASH}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_SECURITY=${_PKCS_SECURITY}
  export FABRIC_CA_CLIENT_BCCSP_PKCS11_IMMUTABLE=${_PKCS_IMMUTABLE}

  set -e
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://admin:adminpw@localhost:9054 --caname ca-orderer --tls.certfiles ${PWD}/organizations/fabric-ca/ordererOrg/tls-cert.pem
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' >${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml

  #pkcs11
  export FABRIC_CA_CLIENT_URL=${FCAS_PROTO}://localhost:9054
  export FABRIC_CA_CLIENT_CSR_HOSTS=localhost
  infoln ""
  infoln "====================================================="
  infoln "[INFO] orderer fabric-ca-server url: ${FABRIC_CA_CLIENT_URL} "
  infoln "====================================================="
  infoln ""

  infoln "Registering orderer"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client register --caname ca-orderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles ${PWD}/organizations/fabric-ca/ordererOrg/tls-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering the orderer admin"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/ordererOrg/tls-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the orderer msp"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://orderer:ordererpw@localhost:9054 --caname ca-orderer -M ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp --csr.hosts orderer.example.com --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/ordererOrg/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/config.yaml
  set +e

  infoln "Generating the orderer-tls certificates"

  #set -x
  #${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://orderer:ordererpw@localhost:9054 --caname ca-orderer -M ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls --enrollment.profile tls --csr.hosts orderer.example.com --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/ordererOrg/tls-cert.pem

  make_fabric_tls_dirs "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls"
  chk_rst_exit $? "failed to make tls directoires, ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls"
 
  ${PWD}/_pkcs_cert_tool/gen_pkcs_key_cert.sh \
    "${PWD}/_pkcs_data/crypto/example.com/pkcs_cert" \
    tls_server \
    "orderer.example.com localhost" \
    tls-orderer.example.com \
    "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key" \
    "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt" \
    "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt" \

  chk_rst_exit $? "failed to generate orderer.example.com tls server cert.."

  set -e
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt" \
     "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/signcerts/cert.pem"

  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt" \
     "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/tls-localhost-9054-ca-orderer.pem"

  # { set +x; } 2>/dev/null
  #cp ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/* ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt
  #cp ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/signcerts/* ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
  #cp ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/keystore/* ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key

  # copy tlscacert/* -> msp/tlscacerts
  mkdir -p ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts
  cp ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/* ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

  mkdir -p ${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts
  cp ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/* ${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts/tlsca.example.com-cert.pem

  infoln "Generating the admin msp"
  set -x
  ${_PKCS_FAB_SAMP_BIN}/fabric-ca-client enroll -u ${FCAS_PROTO}://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca-orderer -M ${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/ordererOrg/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml ${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp/config.yaml
  set +e

  #tree "${PWD}/organizations/ordererOrganizations/example.com"
}
